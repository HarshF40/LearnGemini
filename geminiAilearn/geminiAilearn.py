import os #--> to get the api key
import sys
from PIL import Image #--> to work with images
from urllib import response
import google.generativeai as genai #--> for gemini


GOOGLE_API_KEY = os.getenv("GEMINI_API_KEY")
genai.configure(api_key=GOOGLE_API_KEY)

#two models gemini-pro and gemini-pro-vision
#model = genai.GenerativeModel('gemini-pro') #--> this model only used for only text related things and its optimised for it
model = genai.GenerativeModel('gemini-1.5-flash') #--> this is used for text and image related prompts 



#to check the models
#list all the availbale gemini models
# for m in genai.list_models():
#     if "generateContent" in m.supported_generation_methods:
#         print(m.name)
# sys.exit()

########To work with Images###########

prompt = input("Enter Prompt: ")
img = Image.open("cat.jpg")
response = model.generate_content([prompt,img],stream = True) #--> to pass the image with prompt pass it in a list else just pass the argument without the list
for chunk in response :
    print(chunk.text)

#########To work with Text###########

#loop for continuous conversation
#while True :
# prompt = input("Enter Prompt: ")
# #stream will ",stream=True" the data as it is generated by the ai, only if it is set True, by default it is false
# response = model.generate_content(prompt, stream = True)
# #this will display the data chunk by chunk
# for chunk in response :
#     print(chunk.text)
#     #print("_"*1) #--> to format i guess
# #print(">> " + response.text)


#to get only the safety ratings of the prompt
#print(response.prompt_feedback)

#displays all the data related to the prompt with the prompt and the safety ratings
#print(response.candidates)